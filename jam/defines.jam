import os ;

# Returns environment value if it exists or default otherwise.
# Allow us to customize install path with shell variables like $PREFIX...
# (this is bad practice and should be replaced by a site configuration file)
rule setvar ( env : default )
{
    if [ os.environ $(env) ]
    {
        return [ os.environ $(env) ] ;
    }
    else
    {
        return $(default) ;
    }
}

INSTALLDIR_DEFAULT ?= "" ;
PREFIX_DEFAULT ?= /usr/local ;

constant INSTALLDIR : [ setvar DESTDIR : $(INSTALLDIR_DEFAULT) ] ;
constant PREFIX : [ setvar PREFIX : $(PREFIX_DEFAULT) ] ;

BIN_PREFIX_DEFAULT ?= $(PREFIX)/bin ;
LIB_PREFIX_DEFAULT ?= $(PREFIX)/lib ;
SHARE_PREFIX_DEFAULT ?= $(PREFIX)/share/rdpproxy ;
METRICS_PATH_DEFAULT ?= /var/rdpproxy/recorded/metrics ;
RECORD_PATH_DEFAULT ?= /var/rdpproxy/recorded/rdp ;
RECORD_TMP_PATH_DEFAULT ?= /var/rdpproxy/tmp ;
ETC_PREFIX_DEFAULT ?= /etc/rdpproxy ;
CERT_PREFIX_DEFAULT ?= /etc/rdpproxy/cert ;
HASH_PATH_DEFAULT ?= /var/rdpproxy/hash ;
PERSISTENT_PATH_DEFAULT ?= /var/lib/redemption/cache ;
DRIVE_REDIRECTION_PATH_DEFAULT ?= /var/rdpproxy/drive_redirection ;
PID_PATH_DEFAULT ?= /var/run ;


constant BIN_PREFIX : [ setvar BIN_PREFIX : $(BIN_PREFIX_DEFAULT) ] ;
constant LIB_PREFIX : [ setvar LIB_PREFIX : $(LIB_PREFIX_DEFAULT) ] ;
constant SHARE_PREFIX : [ setvar SHARE_PREFIX : $(SHARE_PREFIX_DEFAULT) ] ;
constant METRICS_PATH : [ setvar METRICS_PATH : $(METRICS_PATH_DEFAULT) ] ;
constant RECORD_PATH : [ setvar RECORD_PATH : $(RECORD_PATH_DEFAULT) ] ;
constant RECORD_TMP_PATH : [ setvar RECORD_TMP_PATH : $(RECORD_TMP_PATH_DEFAULT) ] ;
constant ETC_PREFIX : [ setvar ETC_PREFIX : $(ETC_PREFIX_DEFAULT) ] ;
constant CERT_PREFIX : [ setvar CERT_PREFIX : $(CERT_PREFIX_DEFAULT) ] ;
constant HASH_PATH : [ setvar HASH_PATH : $(HASH_PATH_DEFAULT) ] ;
constant PERSISTENT_PATH : [ setvar PERSISTENT_PATH : $(PERSISTENT_PATH_DEFAULT) ] ;
constant DRIVE_REDIRECTION_PATH : [ setvar DRIVE_REDIRECTION_PATH : $(DRIVE_REDIRECTION_PATH_DEFAULT) ] ;
constant PID_PATH : [ setvar PID_PATH : $(PID_PATH_DEFAULT) ] ;

constant COVERAGE_PREFIX : [ setvar COVERAGE_PREFIX : "" ] ;

rule defines ( properties * )
{
    local defs ;
    defs += <define>METRICS_PATH='\"$(METRICS_PATH)\"' ;
    defs += <define>RECORD_PATH='\"$(RECORD_PATH)\"' ;
    defs += <define>RECORD_TMP_PATH='\"$(RECORD_TMP_PATH)\"' ;
    defs += <define>VIDEO_PATH='\"$(RECORD_TMP_PATH)\"' ;
    defs += <define>OCR_PATH='\"$(RECORD_TMP_PATH)\"' ;
    defs += <define>PNG_PATH='\"$(RECORD_TMP_PATH)\"' ;
    defs += <define>WRM_PATH='\"$(RECORD_PATH)\"' ;
    defs += <define>HASH_PATH='\"$(HASH_PATH)\"' ;
    defs += <define>LICENSE_PATH='\"$(CERT_PREFIX)/rdplicense\"' ;
    defs += <define>CERTIF_PATH='\"$(CERT_PREFIX)\"' ;
    defs += <define>PERSISTENT_PATH='\"$(PERSISTENT_PATH)\"' ;
    defs += <define>DRIVE_REDIRECTION_PATH='\"$(DRIVE_REDIRECTION_PATH)\"' ;
    defs += <define>PID_PATH='\"$(PID_PATH)\"' ;
    return $(defs) ;
}

rule defines-for-test ( properties * )
{
    local defs ;
    defs += <define>METRICS_PATH='\"/tmp/redemption_metrics\"' ;
    defs += <define>RECORD_PATH='\"/tmp/redemption_recorded\"' ;
    defs += <define>RECORD_TMP_PATH='\"/tmp/redemption_tmp\"' ;
    defs += <define>VIDEO_PATH='\"/tmp\"' ;
    defs += <define>OCR_PATH='\"/tmp\"' ;
    defs += <define>PNG_PATH='\"/tmp\"' ;
    defs += <define>WRM_PATH='\"/tmp\"' ;
    defs += <define>HASH_PATH='\"/tmp/redemption_hash\"' ;
    defs += <define>LICENSE_PATH='\"/tmp/redemption_cert/rdplicense\"' ;
    defs += <define>CERTIF_PATH='\"/tmp/redemption_cert\"' ;
    defs += <define>PERSISTENT_PATH='\"/tmp/redemption_cache\"' ;
    defs += <define>DRIVE_REDIRECTION_PATH='\"/tmp/redemption_drive_redirection\"' ;
    defs += <define>PID_PATH='\"/tmp/redemption_pid\"' ;
    return $(defs) ;
}

## ffmpeg {
# empty for default system header
_FFMPEG_INC_PATH ?= "" ;
# empty for default system library
_FFMPEG_LIB_PATH ?= "" ;
_FFMPEG_LINK_MODE ?= "shared" ;
## }

constant FFMPEG_INC_PATH : [ setvar FFMPEG_INC_PATH : $(_FFMPEG_INC_PATH) ] ;
constant FFMPEG_LIB_PATH : [ setvar FFMPEG_LIB_PATH : $(_FFMPEG_LIB_PATH) ] ; # /!\ without `/` terminal
constant FFMPEG_LINK_MODE : [ setvar FFMPEG_LINK_MODE : $(_FFMPEG_LINK_MODE) ] ; # static or shared
constant NO_FFMPEG : [ setvar NO_FFMPEG : 0 ] ;

constant BOOST_STACKTRACE : [ setvar BOOST_STACKTRACE : 0 ] ; # `-sBOOST_STACKTRACE=1` require libboost_stacktrace_backtrace (apt install libboost-stacktrace-dev)
